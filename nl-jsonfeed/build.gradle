import javax.swing.JOptionPane
import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

version = '1.0.0'

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junitVersion}"
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junitVersion}"
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

test {
    useJUnitPlatform()
}

javadoc {
    modularity.inferModulePath = true
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addBooleanOption('html5', true)
}

java {
    sourceCompatibility = project.mainJavaVersion
    targetCompatibility = project.mainJavaVersion
    modularity.inferModulePath = true

    withJavadocJar()
    withSourcesJar()
}

compileTestJava {
    sourceCompatibility = project.testJavaVersion
    targetCompatibility = project.testJavaVersion
}

publishing {
    publications {
        nlJsonfeed(MavenPublication) {
            from components.java

            repositories {
                maven {
                    url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
                    credentials {
                        username = 'nlacombe'
                        password = JOptionPane.showInputDialog('Maven central password')
                    }
                }
            }

            pom {
                name = project.name
                description = 'library for reading and generating [json feeds](https://jsonfeed.org/version/1.1)'
                url = 'https://github.com/nlacombe42/nl-jsonfeed'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/nlacombe42/nl-jsonfeed/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'nlacombe42'
                        name = 'Nicolas Lacombe'
                        email = 'nicolas.m.lacombe@gmail.com'
                        url = 'https://nlacombe.net/summary'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/nlacombe42/nl-jsonfeed.git'
                    developerConnection = 'scm:git:ssh://github.com:nlacombe42/nl-jsonfeed.git'
                    url = 'https://github.com/nlacombe42/nl-jsonfeed/tree/main/'
                }
            }
        }
    }
}

signing {
    def keyId = '8E673A7B';
    def signingKey = new String(Files.readAllBytes(Paths.get(signingKeyFilePath)))
    def signingKeyPassword = JOptionPane.showInputDialog('Signing key password')

    required { gradle.taskGraph.hasTask("publish") }
    useInMemoryPgpKeys(keyId, signingKey, signingKeyPassword)
    sign publishing.publications.nlJsonfeed
}
